function factorialize(num) {
  if (num===0 || num==1) {return 1;}
  return num * factorialize(num-1);
}
factorialize(5, '');

// Recursive function:
//Basically what this does is return the number you gave multiplied by the function itself but this time the value passed to the num parameter is num-1 which ultimately translates to 4.
// Second Execution: num = 5-1 = 4 -> is num 0 or 1? No --> return the multiplication between 4 and the next result when num is now 4-1.
// Third Execution: num = 4 - 1 = 3 -> is num 0 or 1? No --> return the multiplication between 3 and the next result when num is now 3-1.
// Fourth Execution: num = 3-1 = 2 -> is num 0 or 1? No --> return the multiplication between 2 and the next result when num is now 2-1.
// Fifth Execution: num = 2-1 = 1 -> is num 0 or 1? Yep --> return 1. And this is where the recursion stops because there are no more executions.

